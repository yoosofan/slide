; Developed with assistance from DeepSeek AI for educational purposes in OS course slides
; Relocating Bootstrap Loader with INTERRUPTS
; Uses interrupt-driven I/O instead of polling

    ORG  0
    BUN  BOOT
    BUN  ISR
    ORG  100
BOOT, LDA  ZERO ;INIT
    STA  BASE
    STA  BYTES_LOADED
    STA  LOAD_FLAG
    STA  INP_BUFF
    STA  OUT_BUFF
    STA  SAVE_AC ;END
    LDA  ONE ;READ SIZE
    STA  LOAD_FLAG
    LDA  ZERO
    STA  PROG_SIZE
WAIT, LDA  PROG_SIZE
    SZA
    BUN  DONE
    BUN  WAIT
DONE, LDA  ZERO
    STA  LOAD_FLAG;END
    LDA  NEXT_FREE
    STA  BASE
    BSA  LOAD_PROGRAM
    ION
    LDA  BASE
    STA  CALL_PTR
    BSA  CALL_PTR I
    BUN  100

ISR,STA  SAVE_AC
    SKI
    BUN  OUTPUT
    BSA  INPUT
    BUN  ISR_EXIT
OUTPUT, SKO
    BUN  ISR_EXIT
    BSA  OUT_INT
ISR_EXIT, ION
    LDA  SAVE_AC
    BUN  0  I 

INPUT, HEX 0
    INP
    STA  INP_BUFF
    LDA  LOAD_FLAG
    SZA
    BUN  STORE2PRG
    LDA  BASE
    ADD  PROG_INPUT_HANDLER
    STA  CALL_PTR
    BSA  CALL_PTR I
    BUN  INPUT I
STORE2PRG, LDA INP_BUFF
    STA  LOAD_BUFFER
    BUN  INPUT I

OUT_INT, HEX 0
    LDA OUT_BUFF
    SZA
    BUN  SEND_OUTPUT
    LDA  BASE
    ADD  PROG_OUTPUT_HANDLER
    STA  CALL_PTR
    BSA  CALL_PTR I
    BUN  OUT_INT I
SEND_OUTPUT, LDA OUT_BUFF
    OUT
    LDA  ZERO
    STA  OUT_BUFF
    BUN  OUT_INT I

LOAD_PROGRAM, HEX 0
    LDA  ONE
    STA  LOAD_FLAG
    LDA  ZERO
    STA  LOAD_INDEX
    STA  BYTES_LOADED
LOAD_LOOP, LDA  BYTES_LOADED
    SUB  PROG_SIZE
    SPA
    BUN  WAIT4BYTE
    BUN  LOAD_DONE
WAIT4BYTE, LDA LOAD_BUFFER
    SZA
    BUN  STORE_BYTE
    BUN  WAIT4BYTE
STORE_BYTE, LDA  BASE
    ADD  LOAD_INDEX
    STA  PHYS_ADDR
    LDA  LOAD_BUFFER
    STA  PHYS_ADDR I
    STA  LOAD_BUFFER
    LDA  LOAD_INDEX
    INC
    STA  LOAD_INDEX
    LDA  BYTES_LOADED
    INC
    STA  BYTES_LOADED
    BUN  LOAD_LOOP
LOAD_DONE, LDA     ZERO
    STA  LOAD_FLAG
    BUN  LOAD_PROGRAM I

CALL_PTR,       HEX     0
BUFFER_SPACE,   DEC     50
STACK_PTR,      HEX     400
PROG_INPUT_HANDLER, HEX 100
PROG_OUTPUT_HANDLER, HEX 120
ZERO,           DEC     0
ONE,            DEC     1
PROG_SIZE,      DEC     0
BASE,  DEC     500 
BYTES_LOADED,   DEC     0
LOAD_INDEX,     DEC     0
LOAD_FLAG,   DEC     0
INP_BUFF,   DEC     0
OUT_BUFF,  DEC     0
LOAD_BUFFER,    DEC     0
SAVE_AC,        DEC     0
PHYS_ADDR,      HEX     0
TEMP_ADDR,      HEX     0
    END
