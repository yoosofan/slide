; Developed with assistance from DeepSeek AI for educational purposes in OS course slides
; Simple Bootstrap Loader with Absolute Addressing
; No base register - uses fixed physical addresses
; Uses interrupt-driven I/O

  ORG 0
  BUN LOADER
  BUN ISR
  ORG 100
LOADER,LDA ZERO
  STA BYTES_LOADED
  STA PROG_SIZE
  STA INP_BUF
W4SIZE,LDA INP_BUF
  SZA
  BUN STORE_SIZE
  BUN W4SIZE
STORE_SIZE,
  LDA INP_BUF
  STA PROG_SIZE
  STA INP_BUF 
  STA PROG_SIZE
  BSA LOAD_PROGRAM
  ION
  BSA USER_PROG I
  BUN LOADER

ISR,STA SAVE_AC
  SKI
  BUN CHECK_OUTPUT
  INP
  STA INP_BUF
  BUN ISR_EXIT
CHECK_OUTPUT,
  SKO
  BUN ISR_EXIT
  LDA OUTPUT_PENDING
  SZA
  BUN HAS_PENDING_OUTPUT
  BUN ISR_EXIT
HAS_PENDING_OUTPUT,
  LDA OUTPUT_DATA
  OUT     
  LDA ZERO
  STA OUTPUT_PENDING 
ISR_EXIT,
  LDA SAVE_AC
  BUN INDIRECT
SYS_WRITE_HANDLER, HEX 0
  STA OUTPUT_DATA
  LDA ONE
  STA OUTPUT_PENDING
  SKO
  BUN DEVICE_READY
  BUN SYS_WRITE_RETURN
DEVICE_READY,
  LDA OUTPUT_DATA
  OUT   
  LDA ZERO
  STA OUTPUT_PENDING
SYS_WRITE_RETURN,
  BUN SYS_WRITE_HANDLER I

LOAD_PROGRAM, HEX 0
  LDA ZERO
  STA LOAD_INDEX
LOAD_LOOP,
  LDA LOAD_INDEX
  SUB PROG_SIZE
  SPA
  BUN WAIT_FOR_BYTE
  BUN LOAD_DONE
WAIT_FOR_BYTE,
  LDA INP_BUF
  SZA
  BUN STORE_BYTE
  BUN WAIT_FOR_BYTE
STORE_BYTE,
  LDA LOAD_INDEX
  ADD USER_PROG
  STA STORE_ADDR
  LDA INP_BUF
  STA STORE_ADDR I
  STA INP_BUF 
  LDA LOAD_INDEX
  INC
  STA LOAD_INDEX
  BUN LOAD_LOOP
LOAD_DONE,
  BUN LOAD_PROGRAM I

USER_PROG, HEX 500
ZERO,      DEC 0
ONE,       DEC 1
PROG_SIZE, DEC 0
LOAD_INDEX,DEC 0
INP_BUF,   DEC 0
OUTPUT_DATA, DEC  0
OUTPUT_PENDING,DEC 0
SAVE_AC,  DEC     0
STORE_ADDR, HEX   0
INDIRECT,   HEX   0
        END
